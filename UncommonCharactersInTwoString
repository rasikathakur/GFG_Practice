// You are given two strings s1 and s2. Your task is to identify the characters that appear in either string but not in both (i.e., characters that are unique to one of the strings). Return the result as a sorted string.

class Solution {
    String uncommonChars(String s1, String s2) {
        boolean freq1[] = new boolean[26]; // for charaters present in s1 string
        boolean freq2[] = new boolean[26]; // for charaters present in s2 string
        
        for(char c : s1.toCharArray()){ //loop through s1 string
            freq1[c-'a'] = true; //the characters present in string are true
        }
        
        for(char c : s2.toCharArray()){ //loop through s2 string
            freq2[c-'a'] = true; //the characters present in string are true
        }
        
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < 26; i++){
            if(freq1[i] ^ freq2[i]){ //XOR - only one is true
                sb.append((char)(i+'a')); //ASCII a = 97 + i eg . i = 1 then a+i = 98 i.e. b will be appended
            }
        }
        
        return sb.toString();
    }
}

//Output:
Input: s1 = "geeksforgeeks", s2 = "geeksquiz"
Output: "fioqruz"
Explanation: The characters 'f', 'i', 'o', 'q', 'r', 'u', and 'z' are present in either s1 or s2, but not in both.
Input: s1 = "characters", s2 = "alphabets"
Output: "bclpr"
Explanation: The characters 'b', 'c', 'l', 'p', and 'r' are present in either s1 or s2, but not in both.
